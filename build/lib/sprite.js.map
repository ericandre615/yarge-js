{"version":3,"file":"sprite.js","sourceRoot":"","sources":["../../src/lib/sprite.js"],"names":[],"mappings":"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","sourcesContent":["import createProgram from './program.js';\nimport { createArrayBuffer, createVertexArray, createElementArrayBuffer } from './buffers.js';\nimport { vertex as createVertex, vertexArray } from './vertex.js';\nimport { vertexShader, fragmentShader } from '../shaders/sprite.js';\nimport createTexture from './texture.js';\n\nexport const createSprite = gl => async ({\n  position = [0.0, 0.0, 0.0],\n  color = [0.0, 0.0, 0.0, 0.0],\n  width = 0,\n  height = 0,\n  texture,\n  imagePath = '',\n}) => {\n  const program = createProgram(gl)(vertexShader, fragmentShader);\n  const spriteTexture = gl.isTexture(texture && texture.textureId)\n    ? texture\n    : await createTexture(gl)(imagePath);\n  const uniform_mvp = program.getUniformLocation('mvp');\n  const uniform_texture = program.getUniformLocation('u_texture');\n  const a_position = program.getAttribLocation('a_position');\n  const a_color = program.getAttribLocation('a_color');\n  const a_uv = program.getAttribLocation('a_uv');\n  const [tw, th] = spriteTexture.getDimensions();\n  const [x, y, z = 0] = position;\n  const x2 = x + width;\n  const y2 = y + height;\n  const tx = width / tw;\n  const ty = height / th;\n  const vertex = createVertex(gl);\n  const vertices = vertexArray([\n    vertex({ [a_position]: [x, y, z], [a_color]: color, [a_uv]: [0.0, 0.0] }),\n    vertex({ [a_position]: [x2, y, z], [a_color]: color, [a_uv]: [tx, 0.0] }),\n    vertex({ [a_position]: [x, y2, z], [a_color]: color, [a_uv]: [0.0, ty] }),\n    vertex({ [a_position]: [x2, y2, z], [a_color]: color, [a_uv]: [tx, ty] }),\n  ]);\n  const indices = [0, 1, 2, 2, 1, 3];\n\n  const vbo = createArrayBuffer(gl);\n  const ibo = createElementArrayBuffer(gl);\n  const vao = createVertexArray(gl);\n\n  vbo.bind();\n  vbo.staticDrawData(vertices.data);\n\n  vao.bind();\n\n  vertices.vertexAttribPointers(program);\n\n  ibo.bind();\n  ibo.staticDrawData(new Uint16Array(indices));\n  ibo.unbind();\n\n  vao.unbind();\n  vbo.unbind();\n\n  return {\n    getVertices: () => vertices,\n    texture: spriteTexture.textureId,\n    render: (camera) => {\n      const vp = camera.getViewProjection();\n\n      spriteTexture.bindToUnit(1);\n\n      program.setUsed();\n      program.setUniformMat4f(uniform_mvp, vp, true);\n      program.setUniform1i(uniform_texture, 1);\n\n      vao.bind();\n\n      ibo.bind();\n\n      gl.drawElements(\n        gl.TRIANGLES,\n        indices.length,\n        gl.UNSIGNED_SHORT,\n        0\n      );\n\n      ibo.unbind();\n      vao.unbind();\n\n      spriteTexture.unbind();\n\n      return;\n    },\n  };\n};\n\nexport default createSprite;\n"]}