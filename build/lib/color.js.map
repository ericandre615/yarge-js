{"version":3,"file":"color.js","sourceRoot":"","sources":["../../src/lib/color.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;IAC7D,IAAM,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAEtE,IAAI,CAAC,SAAS,EAAE;QACd,MAAM,KAAK,CAAC,mCAAmC,CAAC,CAAC;KAClD;IAED,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;AAC9C,CAAC,CAAC;AAEF,eAAe;IACb,IAAI,MAAA;CACL,CAAC","sourcesContent":["export type RGBA = [number, number, number, number];\n\nexport const rgba = (r: number, g: number, b: number, a: number): RGBA => {\n  const isInRange = [r, g, b, a].every(num => (num >= 0 && num <= 255));\n\n  if (!isInRange) {\n    throw Error('Color value not in range (0..255)');\n  }\n\n  return [r / 255, g / 255, b / 255, a / 255];\n};\n\nexport default {\n  rgba,\n};\n\n"]}