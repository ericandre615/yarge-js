{"version":3,"file":"program.js","sourceRoot":"","sources":["../../src/lib/program.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAM,YAAY,GAAG,UAAA,EAAE,IAAI,OAAA,UAAC,IAAI,EAAE,MAAM;IACtC,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAErC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAEzB,IAAM,OAAO,GAAG,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;IAEjE,IAAI,OAAO,EAAE;QACX,OAAO,MAAM,CAAC;KACf;IAED,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;IACzC,OAAO,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACjC,CAAC,EAd0B,CAc1B,CAAC;AAEF,IAAM,aAAa,GAAG,UAAA,EAAE,IAAI,OAAA,UAAC,kBAAkB,EAAE,oBAAoB;IACnE,IAAM,YAAY,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;IAC5E,IAAM,cAAc,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC;IAElF,IAAM,SAAS,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;IAErC,EAAE,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IACzC,EAAE,CAAC,YAAY,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;IAE3C,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAE1B,IAAM,OAAO,GAAG,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;IAElE,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3C,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAC3B;IAED,OAAO;QACL,EAAE,EAAE,SAAS;QACb,iBAAiB,EAAE,UAAA,IAAI,IAAI,OAAA,EAAE,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,EAArC,CAAqC;QAChE,kBAAkB,EAAE,UAAA,IAAI,IAAI,OAAA,EAAE,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,EAAtC,CAAsC;QAClE,YAAY,EAAE,UAAC,QAAQ,EAAE,KAAK,IAAK,OAAA,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,EAA7B,CAA6B;QAChE,YAAY,EAAE,UAAC,QAAQ,EAAE,KAAK,IAAK,OAAA,EAAE,CAAC,SAAS,OAAZ,EAAE,YAAW,QAAQ,GAAK,KAAK,IAA/B,CAAgC;QACnE,eAAe,EAAE,UAAC,QAAQ,EAAE,KAAK;YAC/B,IAAM,SAAS,GAAG,KAAK,CAAC;YACxB,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC;QACD,OAAO,EAAE,cAAM,OAAA,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAxB,CAAwB;KACxC,CAAC;AACJ,CAAC,EA9B2B,CA8B3B,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["const createShader = gl => (type, source) => {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (success) {\n    return shader;\n  }\n\n  console.log(gl.getShaderInfoLog(shader));\n  return gl.deleteShader(shader);\n};\n\nconst createProgram = gl => (vertexShaderSource, fragmentShaderSource) => {\n  const vertexShader = createShader(gl)(gl.VERTEX_SHADER, vertexShaderSource);\n  const fragmentShader = createShader(gl)(gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n  const programId = gl.createProgram();\n\n  gl.attachShader(programId, vertexShader);\n  gl.attachShader(programId, fragmentShader);\n\n  gl.linkProgram(programId);\n\n  const success = gl.getProgramParameter(programId, gl.LINK_STATUS);\n\n  if (!success) {\n    console.log(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n  }\n\n  return {\n    id: programId,\n    getAttribLocation: name => gl.getAttribLocation(programId, name),\n    getUniformLocation: name => gl.getUniformLocation(programId, name),\n    setUniform1i: (location, value) => gl.uniform1i(location, value),\n    setUniform4f: (location, value) => gl.uniform4f(location, ...value),\n    setUniformMat4f: (location, value) => {\n      const transpose = false; // according to mdn this MUST be false???\n      gl.uniformMatrix4fv(location, transpose, value);\n    },\n    setUsed: () => gl.useProgram(programId),\n  };\n};\n\nexport default createProgram;\n"]}